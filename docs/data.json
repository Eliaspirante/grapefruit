{
    "project": {
        "name": "gf",
        "description": "A fun and easy WebGL-enabled JavaScript Game Engine",
        "version": "0.0.2",
        "url": "https://github.com/englercj/grapefruit"
    },
    "files": {
        "src\\audio\\audio.js": {
            "name": "src\\audio\\audio.js",
            "modules": {},
            "classes": {
                "audio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\debug\\debug.js": {
            "name": "src\\debug\\debug.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\entity\\Entity.js": {
            "name": "src\\entity\\Entity.js",
            "modules": {},
            "classes": {
                "Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\entity\\Sprite.js": {
            "name": "src\\entity\\Sprite.js",
            "modules": {},
            "classes": {
                "Sprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\entity\\entityPool.js": {
            "name": "src\\entity\\entityPool.js",
            "modules": {},
            "classes": {
                "entityPool": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\loader\\AssetLoader.js": {
            "name": "src\\loader\\AssetLoader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\map\\tiled\\TiledLayer.js": {
            "name": "src\\map\\tiled\\TiledLayer.js",
            "modules": {},
            "classes": {
                "TiledLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\map\\tiled\\TiledMap.js": {
            "name": "src\\map\\tiled\\TiledMap.js",
            "modules": {},
            "classes": {
                "TiledMap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\map\\tiled\\TiledObjectGroup.js": {
            "name": "src\\map\\tiled\\TiledObjectGroup.js",
            "modules": {},
            "classes": {
                "TiledObjectGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\map\\tiled\\TiledTileset.js": {
            "name": "src\\map\\tiled\\TiledTileset.js",
            "modules": {},
            "classes": {
                "TiledTileset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\map\\Layer.js": {
            "name": "src\\map\\Layer.js",
            "modules": {},
            "classes": {
                "Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\map\\Map.js": {
            "name": "src\\map\\Map.js",
            "modules": {},
            "classes": {
                "Map": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\plugin\\plugin.js": {
            "name": "src\\plugin\\plugin.js",
            "modules": {},
            "classes": {
                "plugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\utils\\Vector.js": {
            "name": "src\\utils\\Vector.js",
            "modules": {},
            "classes": {
                "Vector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\utils\\utils.js": {
            "name": "src\\utils\\utils.js",
            "modules": {},
            "classes": {
                "utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\DisplayObject.js": {
            "name": "src\\DisplayObject.js",
            "modules": {},
            "classes": {
                "DisplayObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core.js": {
            "name": "src\\core.js",
            "modules": {
                "gf": 1
            },
            "classes": {
                "Point": 1,
                "types": 1,
                "support": 1,
                "Clock": 1,
                "game": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "gf": {
            "name": "gf",
            "submodules": {},
            "classes": {
                "audio": 1,
                "Entity": 1,
                "Sprite": 1,
                "entityPool": 1,
                "TiledLayer": 1,
                "TiledMap": 1,
                "TiledObjectGroup": 1,
                "TiledTileset": 1,
                "Layer": 1,
                "Map": 1,
                "plugin": 1,
                "Vector": 1,
                "utils": 1,
                "DisplayObject": 1,
                "Point": 1,
                "types": 1,
                "support": 1,
                "Clock": 1,
                "game": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src\\core.js",
            "line": 580,
            "description": "The base grapefruit object",
            "extends": "Sprite",
            "is_constructor": 1,
            "params": [
                {
                    "name": "pos",
                    "description": "The starting position of the entity",
                    "type": "Array|Vector|Point"
                },
                {
                    "name": "settings",
                    "description": "Settings to override the defauls, acceptable values\n         are size {Vector}, name {String}, animations {Object}",
                    "type": "Object"
                }
            ],
            "example": [
                "\n     var ent = new gf.Entity([10, 1], { name: 'MyEntity' });"
            ],
            "itemtype": "main",
            "type": "String",
            "return": {
                "description": "\n     returns a number representing how far off a version is.\n\n     will return a negative value if the first version is behind the second,\n     the negative number will show how many versions behind it is on largest version\n     point.\n     That is: '1.0' compared with '1.1' will yield -1\n     and    : '1.2.3' compared with '1.2.1' will yield -2\n\n     0 is returned if the versions match, and a positive number is returned if\n     the first version is larger than the second.",
                "type": "Number"
            }
        }
    },
    "classes": {
        "audio": {
            "name": "audio",
            "shortname": "audio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\audio\\audio.js",
            "line": 32,
            "description": "Grapefruit Audio API, provides an easy interface to use HTML5 Audio"
        },
        "Entity": {
            "name": "Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\entity\\Entity.js",
            "line": 12,
            "description": "The base Entity class. This class is the base for all entities interacting on the stage"
        },
        "Sprite": {
            "name": "Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\entity\\Sprite.js",
            "line": 1,
            "description": "The base Sprite class. This class is the base for all images on the screen"
        },
        "entityPool": {
            "name": "entityPool",
            "shortname": "entityPool",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\entity\\entityPool.js",
            "line": 4,
            "description": "Holds a pool of different Entities that can be created, makes it very\neasy to quickly create different registered entities"
        },
        "TiledLayer": {
            "name": "TiledLayer",
            "shortname": "TiledLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 1,
            "description": "The TiledLayer is the visual tiled layer that actually displays on the screen\n\nThis class will be created by the TiledMap, there shouldn't be a reason to\ncreate an instance on your own."
        },
        "TiledMap": {
            "name": "TiledMap",
            "shortname": "TiledMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 1,
            "description": "Tiled map, expects a Tiled TMX file loaded by the gf.loader as the argument.\nThe loader knows to load all textures and other resources when loading a world TMX\nfile, and this expets that to already be done."
        },
        "TiledObjectGroup": {
            "name": "TiledObjectGroup",
            "shortname": "TiledObjectGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\map\\tiled\\TiledObjectGroup.js",
            "line": 1,
            "description": "Tiled object group is a special layer that contains entities"
        },
        "TiledTileset": {
            "name": "TiledTileset",
            "shortname": "TiledTileset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 1,
            "description": "This object represents a tileset used by a TiledMap.\nThere can be multiple Tilesets in a map"
        },
        "Layer": {
            "name": "Layer",
            "shortname": "Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\map\\Layer.js",
            "line": 1,
            "description": "Base Layer implementation, provides common functions for all Layer types"
        },
        "Map": {
            "name": "Map",
            "shortname": "Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\map\\Map.js",
            "line": 1,
            "description": "Base Map implementation, provides common functions for all Map types"
        },
        "plugin": {
            "name": "plugin",
            "shortname": "plugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\plugin\\plugin.js",
            "line": 2,
            "description": "Namespace for all plugins, it also provides methods for patching\ncore functions, and registering plugins."
        },
        "Vector": {
            "name": "Vector",
            "shortname": "Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\utils\\Vector.js",
            "line": 1,
            "description": "A 2d Vector implementation stolen directly from mrdoob's THREE.js\nthanks mrdoob: https://github.com/mrdoob/three.js/blob/master/src/math/Vector2.js"
        },
        "utils": {
            "name": "utils",
            "shortname": "utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\utils\\utils.js",
            "line": 1,
            "description": "This object represents a tileset used by a TiledMap.\nThere can be multiple Tilesets in a map"
        },
        "DisplayObject": {
            "name": "DisplayObject",
            "shortname": "DisplayObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\DisplayObject.js",
            "line": 1,
            "description": "The base display object, that anything being put on the screen inherits from"
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\core.js",
            "line": 47,
            "description": "Texture object, please see <a href=\"http://www.goodboydigital.com/pixijs/docs/classes/Texture.html\">PIXI.Texture</a>"
        },
        "types": {
            "name": "types",
            "shortname": "types",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\core.js",
            "line": 74,
            "description": "Constant types for easy use in code"
        },
        "support": {
            "name": "support",
            "shortname": "support",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\core.js",
            "line": 324,
            "description": "Feature detection so we cans witch between renderers, play audio correctly, and other things."
        },
        "Clock": {
            "name": "Clock",
            "shortname": "Clock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\core.js",
            "line": 487,
            "description": "High performance clock, from mrdoob's Three.js\nhttps://github.com/mrdoob/three.js/blob/master/src/core/Clock.js"
        },
        "game": {
            "name": "game",
            "shortname": "game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gf",
            "namespace": "",
            "file": "src\\core.js",
            "line": 580,
            "description": "Main game object, controls the entire instance of the game"
        }
    },
    "classitems": [
        {
            "file": "src\\audio\\audio.js",
            "line": 42,
            "description": "Initializes the audio component",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\audio\\audio.js",
            "line": 53,
            "description": "Plays a loaded audio clip",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the sound clip to play. You can also pass the object returned from a previous play",
                    "type": "String|Object"
                },
                {
                    "name": "options",
                    "description": "The options object you can pass properties like \"loop,\" \"volume,\" \"channel\"",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The callback to call after the sound finishes playing",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The object returned can be passed to any audio function in the\n     first parameter to control that audio clip",
                "type": "Object"
            },
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\audio\\audio.js",
            "line": 114,
            "description": "Stops a playing audio clip",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the sound clip to stop. You can also pass the object returned from a previous play",
                    "type": "String|Object"
                },
                {
                    "name": "channel",
                    "description": "The channel that the clip is playing on (not needed if you pass the clip object as the first parameter)",
                    "type": "Number"
                }
            ],
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\audio\\audio.js",
            "line": 134,
            "description": "Pauses a playing audio clip",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the sound clip to pause. You can also pass the object returned from a previous play",
                    "type": "String|Object"
                },
                {
                    "name": "channel",
                    "description": "The channel that the clip is playing on (not needed if you pass the clip object as the first parameter)",
                    "type": "Number"
                }
            ],
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\audio\\audio.js",
            "line": 152,
            "description": "Plays all currently paused or stopped audio clips (only ones that have previously been started with gf.play)",
            "itemtype": "method",
            "name": "playAll",
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\audio\\audio.js",
            "line": 165,
            "description": "Stops all currently paused or playing audio clips",
            "itemtype": "method",
            "name": "stopAll",
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\audio\\audio.js",
            "line": 178,
            "description": "Pauses all currently playing audio clips",
            "itemtype": "method",
            "name": "pauseAll",
            "class": "audio",
            "module": "gf"
        },
        {
            "file": "src\\debug\\debug.js",
            "line": 40,
            "description": "DebugInfo box that displays live-updaing debug info",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\debug\\debug.js",
            "line": 141,
            "description": "mrdoob's stats.js (stats.js r10 - http://github.com/mrdoob/stats.js)",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 26,
            "description": "The type of the entity",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'neutral'",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 35,
            "description": "Can it collide with other entities",
            "itemtype": "property",
            "name": "collidable",
            "type": "Boolean",
            "default": "true",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 44,
            "description": "Can collide with the map when moving",
            "itemtype": "property",
            "name": "mapCollidable",
            "type": "Boolean",
            "default": "true",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 53,
            "description": "Is an entity",
            "itemtype": "property",
            "name": "mapCollidable",
            "type": "Boolean",
            "default": "true",
            "readonly": "",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 63,
            "description": "The velocity of the entity. You can set these in Tiled by using \"x|y\" notation\nvelocity of the entity (units per tick)",
            "itemtype": "property",
            "name": "velocity",
            "type": "Vector",
            "default": "new gf.Vector(0, 0)",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 73,
            "description": "Max velocity to cap the entity at (units per tick)",
            "itemtype": "property",
            "name": "maxVelocity",
            "type": "Vector",
            "default": "new gf.Vector(15, 15)",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 82,
            "description": "Acceleration of the entity (units per second)",
            "itemtype": "property",
            "name": "accel",
            "type": "Vector",
            "default": "new gf.Vector(250, 250)",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 91,
            "description": "Friction to apply to this entity",
            "itemtype": "property",
            "name": "friction",
            "type": "Vector",
            "default": "0",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 100,
            "description": "Gravity to apply to this entity",
            "itemtype": "property",
            "name": "gravity",
            "type": "Vector",
            "default": "0.98 (earth's gravity)",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 109,
            "description": "Whether or not the entity is \"alive\", advisory only",
            "itemtype": "property",
            "name": "alive",
            "type": "Boolean",
            "default": "true",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 118,
            "description": "Whether the entity is falling (read only)",
            "itemtype": "property",
            "name": "falling",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 128,
            "description": "Whether the entity is jumping (read only)",
            "itemtype": "property",
            "name": "jumping",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 138,
            "description": "Whether the entity is on a ladder tile (read only)",
            "itemtype": "property",
            "name": "onladder",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 153,
            "description": "Calculates distance between this object and another",
            "itemtype": "method",
            "name": "distanceTo",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "Distance between this entity and another",
                "type": "Number"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 169,
            "description": "Computes the velocity taking into account gravity, friction, etc",
            "itemtype": "method",
            "name": "computeVelocity",
            "params": [
                {
                    "name": "vel",
                    "description": "The Vector to apply the changes to",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "The modified vector",
                "type": "Vector"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 196,
            "description": "Applies friction to a velocity, usually the current velocity",
            "itemtype": "method",
            "name": "applyFriction",
            "params": [
                {
                    "name": "vel",
                    "description": "The velocity to apply the friction to",
                    "type": "Number"
                },
                {
                    "name": "friction",
                    "description": "The friction factor to apply",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The modified velocity, with friction applied",
                "type": "Object"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 215,
            "description": "Checks if this entity intersects with the passed object\nfrom http://gamedev.stackexchange.com/questions/586/what-is-the-fastest-way-to-work-out-2d-bounding-box-intersection",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "obj",
                    "description": "The Entity to check if this intersects with",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 227,
            "description": "Checks if this entity collides with the passed Entity, a penetration vector is calculated.\nThis method is called from gf.game.checkCollisions(ent); That method will use this to check\nfor any collisions between that entity and all the others on the stage.\nfrom http://gamedev.stackexchange.com/questions/586/what-is-the-fastest-way-to-work-out-2d-bounding-box-intersection",
            "itemtype": "method",
            "name": "checkCollision",
            "params": [
                {
                    "name": "obj",
                    "description": "The Entity to check if this entity collides with",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 254,
            "description": "Calculate the velocity of the entity, and then apply it. This is different than moveEntity\nbecause it checks for map collisions, and applies gravity and friction with computeVelocity",
            "itemtype": "method",
            "name": "updateMovement",
            "return": {
                "description": "Returns the map colliders that the entity is interacting with",
                "type": "Array"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 310,
            "description": "Moves the entity to a new position using the velocity.",
            "itemtype": "method",
            "name": "moveEntity",
            "params": [
                {
                    "name": "vel",
                    "description": "The optional velocity to move the entity.",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Entity"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 333,
            "description": "Overrides base update to do some calculations. Called internally on each frame",
            "itemtype": "method",
            "name": "update",
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 343,
            "description": "On Collision Event\n     called when this object is collided into by another, by default if something collides with\n     a collectable entity we remove the collectable",
            "itemtype": "method",
            "name": "onCollision",
            "params": [
                {
                    "name": "vel",
                    "description": "Collision Vector",
                    "type": "Vector"
                },
                {
                    "name": "obj",
                    "description": "Colliding object",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Entity"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 359,
            "description": "On Move Event\n     called when this entity moves",
            "itemtype": "method",
            "name": "onMove",
            "params": [
                {
                    "name": "vel",
                    "description": "Velocity the entity moved",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Entity"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Entity.js",
            "line": 370,
            "description": "On Break Tile Event\n     called when a tile is broken",
            "itemtype": "method",
            "name": "onBreakTile",
            "params": [
                {
                    "name": "tile",
                    "description": "the tile that is broken",
                    "type": "Unkown"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Entity"
            },
            "class": "Entity",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 15,
            "description": "The size of the sprite",
            "itemtype": "property",
            "name": "size",
            "type": "gf.Vector",
            "default": "new gf.Vector(0, 0);",
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 24,
            "description": "The name of this sprite",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "''",
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 33,
            "description": "The defined animations for this Sprite, this maps the names to the childIndexes",
            "itemtype": "property",
            "name": "anim",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "type": "Object",
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 43,
            "description": "The currently active animation",
            "itemtype": "property",
            "name": "currentAnim",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "type": "Object",
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 68,
            "description": "Defines a new animation on the Sprite",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation, any string you want to name it",
                    "type": "String"
                },
                {
                    "name": "frames",
                    "description": "The frames of the animation, you can pass one gf.Texture\n     as a frame, or an Array of gf.Texture's",
                    "type": "Texture|Array"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Sprite"
            },
            "example": [
                "\n     spr.addAnimation('walk-left', new gf.Texture())\n         .addAnimation('walk-right', [new gf.Texture(), new gf.Texture()]);"
            ],
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 122,
            "description": "Sets the active animation of the sprite, and starts the animation at index 0",
            "itemtype": "method",
            "name": "setActiveAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation to play (defined with addAnimation());",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback when the animation completes, NOT YET IMPLEMENTED",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Sprite"
            },
            "example": [
                "\n     spr.addAnimation('me', new gf.Texture())\n         .setActiveAnimation('me');"
            ],
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 151,
            "description": "Convenience method for setting the position of the Sprite.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "x",
                    "description": "X coord to put the sprite at.\n      If an Array, Vector, or Point is passed then the y parameter is ignored",
                    "type": "Number|Array|Vector|Point"
                },
                {
                    "name": "y",
                    "description": "Y coord to put the sprite at",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Sprite"
            },
            "example": [
                "\n     spr.setPosition(1, 1)\n         .setPosition([5, 5])\n         .setPosition(new gf.Point(10, 10))\n         .setPosition(new gf.Vector(20, 20));"
            ],
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\Sprite.js",
            "line": 180,
            "description": "Checks if the name is the active animation",
            "itemtype": "method",
            "name": "isActiveAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation to check if it is currently active",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the animation is active, false otherwise.",
                "type": "Boolean"
            },
            "example": [
                "\n     spr.addAnimation('walk-left', new gf.Texture())\n         .isActiveAnimation('walk-left'); //false\n\n     spr.setActiveAnimation('walk-left')\n         .isActiveAnimation('walk-left'); //true"
            ],
            "class": "Sprite",
            "module": "gf"
        },
        {
            "file": "src\\entity\\entityPool.js",
            "line": 12,
            "description": "Adds an entity Object to the pool",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "The user-defined name of the Entity to add",
                    "type": "String"
                },
                {
                    "name": "obj",
                    "description": "The Entity or decendant to add to the pool",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the passed object",
                "type": "Object"
            },
            "example": [
                "\n     //create a new ckass to be instantiated\n     var Bug = gf.entityPool.add('bug', gf.Entity.extend({\n         //ctor function\n         init: function(pos, settings) {\n             //call the base ctor\n             this._super(pos, settings);\n\n             this.color = 'red';\n         },\n         beBug: function() {\n             console.log(\"I'm a bug\");\n         }\n     }));\n\n     //then later in your game code\n     var mybug = gf.entityPool.create('bug', {\n         pos: [10, 10]\n     });"
            ],
            "class": "entityPool",
            "module": "gf"
        },
        {
            "file": "src\\entity\\entityPool.js",
            "line": 42,
            "description": "Checks if the entity exists in the pool",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "The user-defined name of the Entity to check if is in the pool",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the passed object",
                "type": "Boolean"
            },
            "class": "entityPool",
            "module": "gf"
        },
        {
            "file": "src\\entity\\entityPool.js",
            "line": 52,
            "description": "Creates a new entity from the pool",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "The user-defined name of the Entity to check if is in the pool",
                    "type": "String"
                },
                {
                    "name": "props",
                    "description": "The properties that would normally be passed as the \"settings\" of the Entity",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a new instance of the object from the pool",
                "type": "Entity"
            },
            "example": [
                "\n     //create a new ckass to be instantiated\n     var Bug = function(pos, settings) {\n         gf.Entity.call(this, pos, settings);\n         this.color = 'red';\n     };\n\n     gf.inherits(Bug, gf.Entity, {\n         beBug: function() {\n             console.log(\"I'm a bug\");\n         }\n     });\n\n     //then later in your game code\n     var mybug = gf.entityPool.create('bug', {\n         pos: [10, 10] //pos, and/or position properties get sent as the first param to the ctor\n     });"
            ],
            "class": "entityPool",
            "module": "gf"
        },
        {
            "file": "src\\loader\\AssetLoader.js",
            "line": 5,
            "description": "The array of asset URLs that are going to be loaded",
            "itemtype": "property",
            "name": "assetURLs",
            "type": "Array",
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 17,
            "description": "The tile IDs of the tilemap",
            "itemtype": "property",
            "name": "name",
            "type": "Uint32Array",
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 25,
            "description": "The sprite pool for rendering tiles",
            "itemtype": "property",
            "name": "tilePool",
            "type": "Array",
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 40,
            "description": "Creates all the tile sprites needed to display the layer",
            "itemtype": "method",
            "name": "renderTiles",
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 65,
            "description": "Creates the sprite for a tile utilizing a pool for the sprites",
            "itemtype": "method",
            "name": "getTileSprite",
            "params": [
                {
                    "name": "tileId",
                    "description": "The id of the tile to get a sprite for",
                    "type": "Number"
                },
                {
                    "name": "TiledTileset",
                    "description": "The tileset to get the texture from",
                    "type": "Tileset"
                }
            ],
            "return": {
                "description": "The sprite to display",
                "type": "PIXI.Sprite"
            },
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 76,
            "description": "Frees a sprite back into the pool",
            "itemtype": "method",
            "name": "freeTileSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite to release to the pool",
                    "type": "PIXI.Sprite"
                }
            ],
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 85,
            "description": "Transforms an x,y coord into the index of a tile in the tiles array",
            "itemtype": "method",
            "name": "getTileIndex",
            "params": [
                {
                    "name": "x",
                    "description": "The x coord to transform, if a vector is passed it's x/y is used and the y param is ignored",
                    "type": "Number|Vector"
                },
                {
                    "name": "y",
                    "description": "The y coord to transform",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledLayer.js",
            "line": 104,
            "description": "Transforms an x,y coord into the TiledTileset tile id",
            "itemtype": "method",
            "name": "getTileId",
            "params": [
                {
                    "name": "x",
                    "description": "The x coord to transform, if a vector is passed it's x/y is used and the y param is ignored",
                    "type": "Number|Vector"
                },
                {
                    "name": "y",
                    "description": "The y coord to transform",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TiledLayer",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 18,
            "description": "The tile size",
            "itemtype": "property",
            "name": "tileSize",
            "type": "Vector",
            "default": "new gf.Vector(0, 0)",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 27,
            "description": "The user-defined properties",
            "itemtype": "property",
            "name": "properties",
            "type": "Object",
            "default": "{}",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 36,
            "description": "The scaled size (size * tileSize * scale)",
            "itemtype": "property",
            "name": "scaledSize",
            "type": "Vector",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 47,
            "description": "The orientation of the map, currently only 'orthogonal' is supported",
            "itemtype": "property",
            "name": "orientation",
            "type": "String",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 55,
            "description": "The maximum extent of the map (largest x and y the map has)\nassuming 0,0 is in the middle of the map, calculate the minimum\nand maximum extent of the map",
            "itemtype": "property",
            "name": "extent",
            "type": "Object",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 74,
            "description": "The tilesets used by this map",
            "itemtype": "property",
            "name": "tilesets",
            "type": "Array",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 86,
            "description": "The layer for collisions",
            "itemtype": "property",
            "name": "collisionLayer",
            "type": "Array",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 94,
            "description": "The tileset for the collision layer",
            "itemtype": "property",
            "name": "collisionTileset",
            "type": "TiledTileset",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 102,
            "description": "The version of this map",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 145,
            "description": "Gets the tileset that an ID is associated with",
            "itemtype": "method",
            "name": "getTileset",
            "params": [
                {
                    "name": "tileId",
                    "description": "The id of the tile to find the tileset for",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "TiledTileset"
            },
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledMap.js",
            "line": 157,
            "description": "Checks an entities collision with the collision layer of this map\nTODO: Fix this for new PIXI stuff",
            "itemtype": "method",
            "name": "checkCollision",
            "params": [
                {
                    "name": "mesh",
                    "description": "The entity to check",
                    "type": "Entity"
                },
                {
                    "name": "sz",
                    "description": "The size of the entity",
                    "type": "Vector"
                },
                {
                    "name": "pv",
                    "description": "The potential movement vector",
                    "type": "Vector"
                }
            ],
            "class": "TiledMap",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledObjectGroup.js",
            "line": 13,
            "description": "The user-defined properties of this group. Usually defined in the TiledEditor",
            "itemtype": "property",
            "name": "properties",
            "type": "Object",
            "class": "TiledObjectGroup",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledObjectGroup.js",
            "line": 21,
            "description": "The objects in this group that can be spawned",
            "itemtype": "property",
            "name": "objects",
            "type": "Array",
            "class": "TiledObjectGroup",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledObjectGroup.js",
            "line": 36,
            "description": "Spawns all the entities associated with this layer, and properly sets their attributes",
            "itemtype": "method",
            "name": "spawn",
            "return": {
                "description": "Returns itself for chainability",
                "type": "TiledObjectGroup"
            },
            "class": "TiledObjectGroup",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledObjectGroup.js",
            "line": 67,
            "description": "Despawns all the entities associated with this layer",
            "itemtype": "method",
            "name": "despawn",
            "return": {
                "description": "Returns itself for chainability",
                "type": "TiledObjectGroup"
            },
            "class": "TiledObjectGroup",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 20,
            "description": "The size of the tileset",
            "itemtype": "property",
            "name": "size",
            "type": "Vector",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 28,
            "description": "The size of a tile in the tileset",
            "itemtype": "property",
            "name": "tileSize",
            "type": "Vector",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 36,
            "description": "The name of the tileset",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 44,
            "description": "The margin around a tile in the tileset",
            "itemtype": "property",
            "name": "margin",
            "type": "Number",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 52,
            "description": "The spacing around a tile in the tileset",
            "itemtype": "property",
            "name": "spacing",
            "type": "Number",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 60,
            "description": "The number of tiles calculated based on size, margin, and spacing",
            "itemtype": "property",
            "name": "numTiles",
            "type": "Vector",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 71,
            "description": "The first tileId in the tileset",
            "itemtype": "property",
            "name": "firstgid",
            "type": "Number",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 79,
            "description": "The last tileId in the tileset",
            "itemtype": "property",
            "name": "lastgid",
            "type": "Number",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 87,
            "description": "The properties of the tileset",
            "itemtype": "property",
            "name": "properties",
            "type": "Object",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 95,
            "description": "The properties of the tiles in the tileset (like collision stuff)",
            "itemtype": "property",
            "name": "tileproperties",
            "type": "Object",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 113,
            "description": "The texture instances for each tile in the set",
            "itemtype": "property",
            "name": "textures",
            "type": "Array",
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 142,
            "description": "Gets the tile properties for a tile based on it's ID",
            "itemtype": "method",
            "name": "getTileProperties",
            "params": [
                {
                    "name": "tileId",
                    "description": "The id of the tile to get the properties for",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The properties of the tile",
                "type": "Object"
            },
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\tiled\\TiledTileset.js",
            "line": 167,
            "description": "Gets the tile texture for a tile based on it's ID",
            "itemtype": "method",
            "name": "getTileTexture",
            "params": [
                {
                    "name": "tileId",
                    "description": "The id of the tile to get the texture for",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The texture for the tile",
                "type": "PIXI.Texture"
            },
            "class": "TiledTileset",
            "module": "gf"
        },
        {
            "file": "src\\map\\Layer.js",
            "line": 11,
            "description": "The name of the layer",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "''",
            "class": "Layer",
            "module": "gf"
        },
        {
            "file": "src\\map\\Layer.js",
            "line": 20,
            "description": "The size of the layer",
            "itemtype": "property",
            "name": "size",
            "type": "Vector",
            "default": "new gf.Vector(1, 1)",
            "class": "Layer",
            "module": "gf"
        },
        {
            "file": "src\\map\\Layer.js",
            "line": 35,
            "description": "Half of the size of the layer",
            "itemtype": "property",
            "name": "hSize",
            "type": "Vector",
            "access": "private",
            "tagname": "",
            "class": "Layer",
            "module": "gf"
        },
        {
            "file": "src\\map\\Map.js",
            "line": 11,
            "description": "The size of the map",
            "itemtype": "property",
            "name": "size",
            "type": "Vector",
            "default": "new gf.Vector(0, 0)",
            "class": "Map",
            "module": "gf"
        },
        {
            "file": "src\\map\\Map.js",
            "line": 28,
            "description": "Gets a layer based on the layer's id or name",
            "itemtype": "method",
            "name": "getLayer",
            "params": [
                {
                    "name": "id",
                    "description": "The layer's number id or string name.",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "Returns the found layer, or null if not found",
                "type": "Layer"
            },
            "class": "Map",
            "module": "gf"
        },
        {
            "file": "src\\plugin\\plugin.js",
            "line": 11,
            "description": "Patches a core function with a new one. The function you override with has a special property\ncalled `this._super` which is a reference to the function you are overriding.",
            "itemtype": "method",
            "name": "patch",
            "params": [
                {
                    "name": "obj",
                    "description": "The object with the method to override",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "The name of the method to override",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "The function to override with",
                    "type": "Function"
                }
            ],
            "example": [
                "\n     //For example, to patch the gf.Sprite.prototype.isActiveAnimation function:\n\n     gf.plugin.patch(gf.Sprite, 'isActiveAnimation', function() {\n         //display a console message\n         console.log('checking animation!');\n         //call the original function\n         this._super();\n     });"
            ],
            "class": "plugin",
            "module": "gf"
        },
        {
            "file": "src\\plugin\\plugin.js",
            "line": 54,
            "description": "Registers a plugin into the gf.plugin namespace.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "plugin",
                    "description": "The object to place in the namespace",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "The name of the plugin to use as the key",
                    "type": "String"
                }
            ],
            "example": [
                "\n     //For example, to register a new plugin:\n     gf.plugin.register(MyPluginObject, 'myPluginName');\n     var plg = new gf.plugin.myPluginName();\n     //OR\n     gf.plugin.myPluginName.someFunction();"
            ],
            "class": "plugin",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 17,
            "description": "Sets the value of the vector",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "The x component of the vector",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y component of the vector",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 31,
            "description": "Sets the X value of the vector",
            "itemtype": "method",
            "name": "setX",
            "params": [
                {
                    "name": "x",
                    "description": "The x component of the vector",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 43,
            "description": "Sets the Y value of the vector",
            "itemtype": "method",
            "name": "setY",
            "params": [
                {
                    "name": "y",
                    "description": "The y component of the vector",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 55,
            "description": "Sets a component value of the vector",
            "itemtype": "method",
            "name": "setComponent",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the component to set (0 = x, 1 = y)",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "The value to set the component to",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 72,
            "description": "Gets a component value of the vector",
            "itemtype": "method",
            "name": "getComponent",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the component to set (0 = x, 1 = y)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the component value",
                "type": "Number"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 86,
            "description": "Copies the passed vector's components to this vector",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to copy the values from",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 99,
            "description": "Adds a vector to this one",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to add to this one",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 112,
            "description": "Adds two vectors to each other and stores the result in this vector",
            "itemtype": "method",
            "name": "addVectors",
            "params": [
                {
                    "name": "vector1",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "vector2",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 126,
            "description": "Adds a scalar value to the x and y components of this vector",
            "itemtype": "method",
            "name": "addScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The scalar value to add",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 139,
            "description": "Subtracts a vector from this one",
            "itemtype": "method",
            "name": "sub",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to subtract from this one",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 152,
            "description": "Subtracts two vectors from each other and stores the result in this vector",
            "itemtype": "method",
            "name": "subVectors",
            "params": [
                {
                    "name": "vector1",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "vector2",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 166,
            "description": "Multiplies the x and y components of this vector by a scalar value",
            "itemtype": "method",
            "name": "multiplyScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The value to multiply by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 179,
            "description": "Divides the x and y components of this vector by a scalar value",
            "itemtype": "method",
            "name": "divideScalar",
            "params": [
                {
                    "name": "scalar",
                    "description": "The value to divide by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 196,
            "description": "Sets this vector components to the minimum value when compared to the passed vector's components",
            "itemtype": "method",
            "name": "min",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to compare to",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 214,
            "description": "Sets this vector components to the maximum value when compared to the passed vector's components",
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to compare to",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 232,
            "description": "Clamps the vectors components to be between min and max",
            "itemtype": "method",
            "name": "max",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value a component can be",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value a component can be",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 257,
            "description": "Negates this vector (multiplies by -1)",
            "itemtype": "method",
            "name": "negate",
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 266,
            "description": "Performs the dot product between this vector and the passed one and returns the result",
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns the dot product",
                "type": "Number"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 276,
            "description": "Calculates the square length of the vector",
            "itemtype": "method",
            "name": "lengthSq",
            "return": {
                "description": "Returns the square length of the vector",
                "type": "Number"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 285,
            "description": "Calculates the length of the vector",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "Returns the length of the vector",
                "type": "Number"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 294,
            "description": "Normalizes this vector (divides by its length)",
            "itemtype": "method",
            "name": "normalize",
            "return": {
                "description": "Returns the normalized vector",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 303,
            "description": "Calculates the distance to the passed vector",
            "itemtype": "method",
            "name": "distanceTo",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "The distance",
                "type": "Number"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 313,
            "description": "Calculates the square distance to the passed vector",
            "itemtype": "method",
            "name": "distanceToSquared",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "The square distance",
                "type": "Number"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 324,
            "description": "Sets the length of the vector",
            "itemtype": "method",
            "name": "setLength",
            "params": [
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 340,
            "description": "Performs a linear interpolation between this vector and the passed vector",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "alpha",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 354,
            "description": "Checks if this vector is equal to another",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to compare with",
                    "type": "Vector"
                }
            ],
            "return": {
                "description": "Returns itself",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 364,
            "description": "Returns an array with the components of this vector as the elements",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "Returns an array of [x,y] form",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\Vector.js",
            "line": 373,
            "description": "Creates a new instance of Vector, with the same components as this vector",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "Returns a new Vector with the same values",
                "type": "Vector"
            },
            "class": "Vector",
            "module": "gf"
        },
        {
            "file": "src\\utils\\utils.js",
            "line": 10,
            "description": "Ensures that some input is a vector, converts strings and arrays into vector objects",
            "itemtype": "method",
            "name": "ensureVector",
            "params": [
                {
                    "name": "vec",
                    "description": "The object to ensure becomes a vector",
                    "type": "Array|String|Vector"
                }
            ],
            "return": {
                "description": "The vector created with the passed values, if the values can't be made\n     into a Vector, then a new Vector with 0,0 is returned",
                "type": "Vector"
            },
            "class": "utils",
            "module": "gf"
        },
        {
            "file": "src\\utils\\utils.js",
            "line": 36,
            "description": "An empty function that performs no action",
            "itemtype": "method",
            "name": "noop",
            "class": "utils",
            "module": "gf"
        },
        {
            "file": "src\\utils\\utils.js",
            "line": 42,
            "description": "Performs an ajax request, and manages the callbacks passed in",
            "itemtype": "method",
            "name": "ajax",
            "params": [
                {
                    "name": "settings",
                    "description": "The settings of the ajax request, similar to jQuery's ajax function",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An XHR object",
                "type": "AjaxRequest"
            },
            "class": "utils",
            "module": "gf"
        },
        {
            "file": "src\\utils\\utils.js",
            "line": 90,
            "description": "Wraps XMLHttpRequest in a cross-browser way.",
            "itemtype": "method",
            "name": "AjaxRequest",
            "return": {
                "description": "",
                "type": "ActiveXObject|XMLHttpRequest"
            },
            "class": "utils",
            "module": "gf"
        },
        {
            "file": "src\\utils\\utils.js",
            "line": 120,
            "description": "This will take values and override the passed obj's properties with those values.\nThe difference from a normal object extend is that this will try to massage the passed\nvalue into the same type as the object's property. Also if the key for the value is not\nin the original object, it is not copied.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to extend the values into",
                    "type": "Object"
                },
                {
                    "name": "values",
                    "description": "The values to put into the object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "returns the updated object",
                "type": "Object"
            },
            "example": [
                "\n     var obj = { vec: new gf.Vector(), arr: [] },\n         vals = { vec: '2|5', arr: '5|10|11' };\n     gf.setValues(obj, vals);\n     //now obj is:\n     // { vec: gf.Vector(2, 5), arr: [5, 10, 11] }\n     "
            ],
            "class": "utils",
            "module": "gf"
        },
        {
            "file": "src\\utils\\utils.js",
            "line": 200,
            "description": "Clamps a number between two values.",
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "num",
                    "description": "The number to clamp",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "The minimum value the number is allowed to be",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value the number is allowed to be",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The clamped value",
                "type": "Number"
            },
            "class": "utils",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 1,
            "license": "GrapeFruit Game Engine\nCopyright (c) 2012, Chad Engler\n\nGrapeFruit is licensed under the MIT License.\nhttp://www.opensource.org/licenses/mit-license.php\n\nKnown Limiting Features:\n  - Canvas\n      - IE 9+\n      - FF 2+\n      - Chrome 4+\n      - Safari 3.1+\n      - Opera 9+\n\n  - WebGL\n      - IE 11+\n      - FF 4+\n      - Chrome 8+\n      - Safari 6+\n      - Opera 12+\n\n  - Object.create\n      - IE 9+\n      - FF 4+\n      - Chrome 7+\n      - Safari 5+\n      - Opera 12+",
            "class": "Point",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 81,
            "description": "Entity types",
            "itemtype": "property",
            "name": "ENTITY",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 94,
            "description": "Layer types",
            "itemtype": "property",
            "name": "LAYER",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 104,
            "description": "Tile collision types",
            "itemtype": "property",
            "name": "COLLISION",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 118,
            "description": "Event definitions",
            "itemtype": "property",
            "name": "EVENT",
            "type": "Object",
            "deprecated": true,
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 133,
            "description": "Resource types",
            "itemtype": "property",
            "name": "RESOURCE",
            "type": "Object",
            "deprecated": true,
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 151,
            "description": "Bindable keycodes",
            "itemtype": "property",
            "name": "KEY",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 236,
            "description": "Bindable Mouse Events",
            "itemtype": "property",
            "name": "MOUSE",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 252,
            "description": "Bindable Touch Events",
            "itemtype": "property",
            "name": "TOUCH",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 268,
            "description": "Bindable Gamepad Buttons",
            "itemtype": "property",
            "name": "GP_BUTTONS",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 301,
            "description": "Bindable Gamepad Axes",
            "itemtype": "property",
            "name": "GP_AXES",
            "type": "Object",
            "class": "types",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 331,
            "description": "The current user agent string",
            "itemtype": "property",
            "name": "ua",
            "type": "String",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 339,
            "description": "Whether or not canvas is supported",
            "itemtype": "property",
            "name": "canvas",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 347,
            "description": "Whether or not webgl is supported",
            "itemtype": "property",
            "name": "webgl",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 355,
            "description": "Whether or not web workers are supported",
            "itemtype": "property",
            "name": "workers",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 363,
            "description": "Whether or not the filesystem API is supported",
            "itemtype": "property",
            "name": "fileapi",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 371,
            "description": "Whether or not the audio elements are supported, and if so which types",
            "itemtype": "property",
            "name": "audio",
            "type": "Object",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 385,
            "description": "Whether or not local storage is supported",
            "itemtype": "property",
            "name": "localStorage",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 393,
            "description": "Whether or not touch is supported",
            "itemtype": "property",
            "name": "touch",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 401,
            "description": "Whether or not the gamepad API is supported",
            "itemtype": "property",
            "name": "gamepad",
            "type": "bool",
            "class": "support",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 513,
            "description": "Starts the timer",
            "itemtype": "method",
            "name": "start",
            "example": [
                "\n     clock.start();"
            ],
            "class": "Clock",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 527,
            "description": "Stops the timer",
            "itemtype": "method",
            "name": "stop",
            "example": [
                "\n     clock.stop();"
            ],
            "class": "Clock",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 538,
            "description": "Gets the total time that the timer has been running",
            "itemtype": "method",
            "name": "getElapsedTime",
            "return": {
                "description": "Total ellapsed time in ms",
                "type": "Number"
            },
            "example": [
                "\n     clock.getElapsedTime();"
            ],
            "class": "Clock",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 551,
            "description": "Gets the difference in time since getDelta() was called last",
            "itemtype": "method",
            "name": "getDelta",
            "return": {
                "description": "Ellapsed time since last call in seconds",
                "type": "Number"
            },
            "example": [
                "\n     clock.getDelta();"
            ],
            "class": "Clock",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 587,
            "description": "Maximum Z value",
            "itemtype": "property",
            "name": "MAX_Z",
            "type": "{Number}",
            "default": "500",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 598,
            "description": "Raw PIXI.stage instance",
            "itemtype": "property",
            "name": "_stage",
            "type": "{PIXI.Stage}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 608,
            "description": "Raw gf.Clock instance for internal timing",
            "itemtype": "property",
            "name": "_clock",
            "type": "{gf.Clock}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 618,
            "description": "Raw rendering engine",
            "itemtype": "property",
            "name": "_renderer",
            "type": "{PIXI.WebGLRenderer|PIXI.CanvasRenderer}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 628,
            "description": "Internal ID counter for object IDs",
            "itemtype": "property",
            "name": "_nextId",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 637,
            "description": "The domElement that we are rendering into (the container)",
            "itemtype": "property",
            "name": "_cont",
            "type": "{DOMELement}",
            "access": "private",
            "tagname": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 646,
            "description": "Tracker to see if the game has been initialized yet",
            "itemtype": "property",
            "name": "_initialized",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 655,
            "description": "Initializes a new game instance, only one allowed",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "contId",
                    "description": "The container for the new canvas we will create for the game",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "Options such as gravity, friction, and renderMethod",
                    "type": "Object"
                }
            ],
            "example": [
                " gf.game.init('myDiv', { renderMethod: 'webgl' });"
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Game"
            },
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 742,
            "description": "Allows you to resize the game area",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "Width to resize to",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Height to resize to",
                    "type": "Number"
                }
            ],
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 763,
            "description": "Adds an object to the current stage",
            "itemtype": "method",
            "name": "addObject",
            "params": [
                {
                    "name": "obj",
                    "description": "The sprite to the stage",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Game"
            },
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 780,
            "description": "Removes a sprite from the stage",
            "itemtype": "method",
            "name": "removeObject",
            "params": [
                {
                    "name": "obj",
                    "description": "The sprite to the stage",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Game"
            },
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 814,
            "description": "Begins the render loop",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Returns itself for chainability",
                "type": "Game"
            },
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 826,
            "description": "Check if passed entity collides with any others",
            "itemtype": "method",
            "name": "checkCollisions",
            "params": [
                {
                    "name": "obj",
                    "description": "The sprite to the stage",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "Returns an array of colliders",
                "type": "Array"
            },
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 856,
            "description": "locks the camera on an entity",
            "itemtype": "method",
            "name": "cameraTrack",
            "params": [
                {
                    "name": "ent",
                    "description": "The sprite to the stage",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "Returns itself for chainability",
                "type": "Game"
            },
            "class": "game",
            "module": "gf"
        },
        {
            "file": "src\\core.js",
            "line": 872,
            "description": "The looping render tick",
            "itemtype": "method",
            "name": "_tick",
            "access": "private",
            "tagname": "",
            "class": "game",
            "module": "gf"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: license",
            "line": " src\\core.js:1"
        },
        {
            "message": "Missing item type\nDebugInfo box that displays live-updaing debug info",
            "line": " src\\debug\\debug.js:40"
        },
        {
            "message": "Missing item type\nmrdoob's stats.js (stats.js r10 - http://github.com/mrdoob/stats.js)",
            "line": " src\\debug\\debug.js:141"
        },
        {
            "message": "Missing item type",
            "line": " src\\core.js:1"
        }
    ]
}